name: Deploy Flutter Web App to Digital Ocean

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  CI: true

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: true

    steps:
      # Step 1: Checkout code
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # Step 2: Set up Flutter
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.24.0"
          channel: "stable"
          cache: true

      # Step 3: Install dependencies
      - name: Install dependencies
        run: flutter pub get

      # Step 4: Build Flutter Web
      - name: Build Web
        run: flutter build web --release --web-renderer html --dart-define=ENVIRONMENT=production

      # Step 5: Docker build and push to Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_USERNAME }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ secrets.DO_USERNAME }}/firetrack360:latest,${{ secrets.DO_PRIVATE_KEY }}/firetrack360:${{ github.sha }}
          cache-from: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/firetrack360:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/firetrack360:buildcache,mode=max

      # Step 6: Deploy to DigitalOcean droplet
      - name: Deploy to DigitalOcean Droplet
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DO_HOST }}
          username: root
          key: ${{ secrets.DO_PRIVATE_KEY }}
          script: |
            docker pull ${{ secrets.DOCKER_USERNAME }}/firetrack360:latest
            docker stop firetrack360-frontend || true
            docker rm firetrack360-frontend || true
            docker run -d --name firetrack360-frontend \
              --restart unless-stopped \
              -p 4000:4000 \
              ${{ secrets.DOCKER_USERNAME }}/firetrack360:latest
            # Cleanup unused images to prevent disk space issues
            docker image prune -af --filter "until=24h"
